{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block page_title %}Rapportsida{% endblock %}

{% block content %}

    <h1>Rapport för respektive kursmoment</h1>

    <section id="kmom01>">
        <h2>Kmom01</h2>
        <p>
            Jag har tidigare skrivit objektorienderad programmering i Python, även lite kort i JavaScript.
            Men än så länge känns det som att de är väldigt olikt, återstår att se ju längre in i kursen 
            vi kommer.
            I PHP kan man med hjälp av klasser skapa objekt, klasser är mallen för objektet/objekten som skapas.
            En klass kan bestå utav egenskaper och metoder som beskriver beteende och funktion.
            Egenskaper bestäms genom variabler och metoder bestäms genom funktioner.
            Man skapar en klass genom att använda nyckelorder "class" och genom att instansiera klassen så skapar 
            man ett objekt, då använder man nyckelordet "new". För att komma igång behöver man ha kunskap om 
            klasser, egenskaper, metoder och hur man skapar objekt.
        </p>

        <p>
            Jag tycker att stukturen verkar lättarbetad, men de tog ett tag att komma in i det. Exempelvis så 
            tog det ett tag innan jag klurade ut hur SCSS kunde användas i Symfony.
            Dock hade jag väldigt svårt att få till så att den publika webbkatalogen ligger i 
            me/report/public, det lyckades jag aldrig med...
            Men ser ändå fram emot att lära mig Symfony ytterligare under kursens gång.
            Jag har under detta kursmoment inte använt artikeln "PHP The Right Way" så mycket.
            Men något kapitel som låter intressant är Coding Practices, att kunna exempelvis metoder & grunder är 
            en bra & grundläggande väg framåt för att skriva bra kod som är lätt att underhålla.
            Min TIL för detta kursmoment är ramverket Symfony, det känns användarvänligt och flexibelt då man kan 
            kombinera med andra ramverk. Ser fram emot att lära mig mer om symfony genom kursens gång.
        </p>
    </section>

    <section id="kmom02>">
        <h2>Kmom02</h2>
        <p>
            Arv/Inheritance innebär att en klass ärver egenskaper och metoder från en överordnad klass. 
            Med hjälp av detta är det möjligt att återanvända kod och skapa en hieraki av klasser. 
            Arv görs med hjälp av "extends" i PHP.
            Komposition/composition innebär att en klass innehåller en eller flera andra klasser. Detta 
            möjliggör också att man kan återanvända kod och skapa mer modulära/flexibla program.
            Interface är en samling av metoder som en klass implementerar och måste implementera & uppfylla.
            När man skapar ett interface beskriver man endast vilka parametrar metoderna kräver samt vilket 
            returvärde som förväntas.
            Trait är också en möjlighet för att återanvända kod mellan klasser. Exempelvis om en klass 
            behöver ärva från mer än en klass.
        </p>
        <p>
            Jag är nöjd än så länge, klasserna innehåller metoderna för att klara av kmom02. Möjligtvis att 
            det kommer fler klasser framöver om vi bygger vidare på kortspelet. Jag har lärt mig mer om både 
            arv, komposition och association. Jag har en klass med alla huvudmetoderna som sedan är grafisk klass 
            ärver. Sedan komposition mellan klasser.
            Med hjälp av flödesdiagram tycker jag att planerandet av kodskrivningen blir enklare, sedan stöter man på 
            saker som inte riktigt blir som man tänkt sig från början. Men tycker ändå de blir en bra start och grund att 
            utgå ifrån för att komma igång och göra justeringar längs vägen.
            I denna uppgift använde jag mig tyvärr inte mycket utav psuedokod, bara i början. Lärdom att ta med sig är 
            att försöka strukturera upp det man har vetskap om i först flödesdiagram och sedan beskriva det i psuedokod 
            innan man sätter igång.
        </p>
        <p>
            TIL för detta kmom är objektorienterad programmering, jag tycker att objektorientering inte är helt lätt att greppa 
            alla gånger. Men det blir enklare och enklare för varje gång och det är alltid någon polett som trillar ner.
            Denna gången var det ökad förståelse för arv och komposition som blev poletterna.
        </p>
    </section>

    <section id="kmom03>">
        <h2>Kmom03</h2>
        <p>
            Text för kmom03
        </p>
    </section>

    <section id="kmom04>">
        <h2>Kmom04</h2>
        <p>
            Text för kmom04
        </p>
    </section>

    <section id="kmom05>">
        <h2>Kmom05</h2>
        <p>
            Text för kmom05
        </p>
    </section>

    <section id="kmom06>">
        <h2>Kmom06</h2>
        <p>
            Text för kmom06
        </p>
    </section>

{% endblock %}